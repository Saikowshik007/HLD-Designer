import type { DesignElement } from '@/types';

export interface ComponentTemplate {
  id: string;
  name: string;
  icon: string;
  category: 'storage' | 'compute' | 'network' | 'client' | 'other';
  createComponent: (x: number, y: number) => Omit<DesignElement, 'id'>;
}

export const componentTemplates: ComponentTemplate[] = [
  {
    id: 'database',
    name: 'Database',
    icon: 'üóÑÔ∏è',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'database',
      x,
      y,
      width: 120,
      height: 100,
      fill: '#dbeafe',
      stroke: '#1e40af',
      strokeWidth: 2,
      text: 'Database',
      fontSize: 14,
    }),
  },
  {
    id: 'cache',
    name: 'Cache',
    icon: '‚ö°',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'database',
      x,
      y,
      width: 120,
      height: 90,
      fill: '#fef3c7',
      stroke: '#f59e0b',
      strokeWidth: 2,
      text: 'Cache',
      fontSize: 14,
    }),
  },
  {
    id: 'api-gateway',
    name: 'API Gateway',
    icon: 'üö™',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 140,
      height: 70,
      fill: '#d1fae5',
      stroke: '#059669',
      strokeWidth: 2,
      text: 'API Gateway',
      fontSize: 14,
    }),
  },
  {
    id: 'load-balancer',
    name: 'Load Balancer',
    icon: '‚öñÔ∏è',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 140,
      height: 70,
      fill: '#e0e7ff',
      stroke: '#4f46e5',
      strokeWidth: 2,
      text: 'Load Balancer',
      fontSize: 14,
    }),
  },
  {
    id: 'microservice',
    name: 'Microservice',
    icon: 'üì¶',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'server-stack',
      x,
      y,
      width: 130,
      height: 90,
      fill: '#f3e8ff',
      stroke: '#7c3aed',
      strokeWidth: 2,
      text: 'Service',
      fontSize: 14,
    }),
  },
  {
    id: 'message-queue',
    name: 'Message Queue',
    icon: 'üì®',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#fce7f3',
      stroke: '#be185d',
      strokeWidth: 2,
      text: 'Queue',
      fontSize: 14,
    }),
  },
  {
    id: 'cdn',
    name: 'CDN',
    icon: 'üåê',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'cloud',
      x,
      y,
      width: 140,
      height: 80,
      fill: '#ccfbf1',
      stroke: '#0d9488',
      strokeWidth: 2,
      text: 'CDN',
      fontSize: 14,
    }),
  },
  {
    id: 'client',
    name: 'Client/UI',
    icon: 'üë§',
    category: 'client',
    createComponent: (x, y) => ({
      type: 'circle',
      x,
      y,
      radius: 45,
      fill: '#fef2f2',
      stroke: '#dc2626',
      strokeWidth: 2,
      text: 'Client',
      fontSize: 14,
    }),
  },
  {
    id: 'server',
    name: 'Server',
    icon: 'üñ•Ô∏è',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'server-stack',
      x,
      y,
      width: 120,
      height: 90,
      fill: '#e5e7eb',
      stroke: '#374151',
      strokeWidth: 2,
      text: 'Server',
      fontSize: 14,
    }),
  },
  {
    id: 'storage',
    name: 'Object Storage',
    icon: 'üíæ',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'cloud',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#ddd6fe',
      stroke: '#6d28d9',
      strokeWidth: 2,
      text: 'Storage',
      fontSize: 14,
    }),
  },
  {
    id: 'auth-service',
    name: 'Auth Service',
    icon: 'üîê',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 120,
      height: 70,
      fill: '#fef3c7',
      stroke: '#d97706',
      strokeWidth: 2,
      text: 'Auth',
      fontSize: 14,
    }),
  },
  {
    id: 'worker',
    name: 'Worker/Background Job',
    icon: '‚öôÔ∏è',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'server-stack',
      x,
      y,
      width: 120,
      height: 90,
      fill: '#fed7aa',
      stroke: '#c2410c',
      strokeWidth: 2,
      text: 'Worker',
      fontSize: 14,
    }),
  },
  {
    id: 'search-engine',
    name: 'Search Engine',
    icon: 'üîç',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'hexagon',
      x,
      y,
      width: 120,
      height: 100,
      fill: '#fee2e2',
      stroke: '#dc2626',
      strokeWidth: 2,
      text: 'Search',
      fontSize: 14,
    }),
  },
  {
    id: 'monitoring',
    name: 'Monitoring/Metrics',
    icon: 'üìä',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#dcfce7',
      stroke: '#16a34a',
      strokeWidth: 2,
      text: 'Monitoring',
      fontSize: 14,
    }),
  },
  {
    id: 'notification',
    name: 'Notification Service',
    icon: 'üîî',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#fef9c3',
      stroke: '#ca8a04',
      strokeWidth: 2,
      text: 'Notifications',
      fontSize: 14,
    }),
  },
  {
    id: 'file-storage',
    name: 'File Storage',
    icon: 'üìÅ',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'database',
      x,
      y,
      width: 120,
      height: 100,
      fill: '#e0f2fe',
      stroke: '#0284c7',
      strokeWidth: 2,
      text: 'Files',
      fontSize: 14,
    }),
  },
  {
    id: 'proxy',
    name: 'Proxy/Reverse Proxy',
    icon: 'üîÑ',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 140,
      height: 70,
      fill: '#f3e8ff',
      stroke: '#9333ea',
      strokeWidth: 2,
      text: 'Proxy',
      fontSize: 14,
    }),
  },
  {
    id: 'container',
    name: 'Container/K8s',
    icon: 'üì¶',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'cube',
      x,
      y,
      width: 100,
      height: 80,
      fill: '#dbeafe',
      stroke: '#2563eb',
      strokeWidth: 2,
      text: 'Container',
      fontSize: 14,
    }),
  },
  {
    id: 'event-stream',
    name: 'Event Stream',
    icon: 'üì°',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#e0e7ff',
      stroke: '#4338ca',
      strokeWidth: 2,
      text: 'Stream',
      fontSize: 14,
    }),
  },
  {
    id: 'mobile-app',
    name: 'Mobile App',
    icon: 'üì±',
    category: 'client',
    createComponent: (x, y) => ({
      type: 'circle',
      x,
      y,
      radius: 45,
      fill: '#f0fdf4',
      stroke: '#16a34a',
      strokeWidth: 2,
      text: 'Mobile',
      fontSize: 14,
    }),
  },
  {
    id: 'web-server',
    name: 'Web Server',
    icon: 'üåê',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'server-stack',
      x,
      y,
      width: 120,
      height: 90,
      fill: '#fef3c7',
      stroke: '#d97706',
      strokeWidth: 2,
      text: 'Web Server',
      fontSize: 14,
    }),
  },
  {
    id: 'analytics',
    name: 'Analytics',
    icon: 'üìà',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#fce7f3',
      stroke: '#db2777',
      strokeWidth: 2,
      text: 'Analytics',
      fontSize: 14,
    }),
  },
  {
    id: 'rate-limiter',
    name: 'Rate Limiter',
    icon: 'üö¶',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'diamond',
      x,
      y,
      width: 120,
      height: 100,
      fill: '#ffedd5',
      stroke: '#ea580c',
      strokeWidth: 2,
      text: 'Rate Limit',
      fontSize: 14,
    }),
  },
  {
    id: 'service-mesh',
    name: 'Service Mesh',
    icon: 'üï∏Ô∏è',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'hexagon',
      x,
      y,
      width: 120,
      height: 100,
      fill: '#e0f2fe',
      stroke: '#0369a1',
      strokeWidth: 2,
      text: 'Mesh',
      fontSize: 14,
    }),
  },
  {
    id: 'webhook',
    name: 'Webhook',
    icon: 'ü™ù',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 120,
      height: 70,
      fill: '#fbcfe8',
      stroke: '#be185d',
      strokeWidth: 2,
      text: 'Webhook',
      fontSize: 14,
    }),
  },
  {
    id: 'dns',
    name: 'DNS',
    icon: 'üî§',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'cloud',
      x,
      y,
      width: 120,
      height: 70,
      fill: '#ddd6fe',
      stroke: '#7c3aed',
      strokeWidth: 2,
      text: 'DNS',
      fontSize: 14,
    }),
  },
  {
    id: 'email-service',
    name: 'Email Service',
    icon: '‚úâÔ∏è',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#fef3c7',
      stroke: '#f59e0b',
      strokeWidth: 2,
      text: 'Email',
      fontSize: 14,
    }),
  },
  {
    id: 'backup',
    name: 'Backup Service',
    icon: 'üíø',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'database',
      x,
      y,
      width: 120,
      height: 100,
      fill: '#f5f3ff',
      stroke: '#8b5cf6',
      strokeWidth: 2,
      text: 'Backup',
      fontSize: 14,
    }),
  },
  {
    id: 'scheduler',
    name: 'Scheduler/Cron',
    icon: '‚è∞',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#fce7f3',
      stroke: '#ec4899',
      strokeWidth: 2,
      text: 'Scheduler',
      fontSize: 14,
    }),
  },
  {
    id: 'logging',
    name: 'Logging Service',
    icon: 'üìù',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#e0f2fe',
      stroke: '#0891b2',
      strokeWidth: 2,
      text: 'Logs',
      fontSize: 14,
    }),
  },
  {
    id: 'payment',
    name: 'Payment Gateway',
    icon: 'üí≥',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 140,
      height: 70,
      fill: '#d1fae5',
      stroke: '#10b981',
      strokeWidth: 2,
      text: 'Payment',
      fontSize: 14,
    }),
  },
  {
    id: 'third-party',
    name: 'Third-party API',
    icon: 'üîå',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 140,
      height: 70,
      fill: '#e5e7eb',
      stroke: '#6b7280',
      strokeWidth: 2,
      text: '3rd Party',
      fontSize: 14,
    }),
  },
];

export const getTemplatesByCategory = (category: ComponentTemplate['category']) => {
  return componentTemplates.filter(t => t.category === category);
};
