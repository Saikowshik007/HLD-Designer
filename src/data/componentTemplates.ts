import type { DesignElement } from '@/types';

export interface ComponentTemplate {
  id: string;
  name: string;
  icon: string;
  category: 'storage' | 'compute' | 'network' | 'client' | 'other';
  createComponent: (x: number, y: number) => Omit<DesignElement, 'id'>;
}

export const componentTemplates: ComponentTemplate[] = [
  {
    id: 'database',
    name: 'Database',
    icon: '🗄️',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'database',
      x,
      y,
      width: 120,
      height: 100,
      fill: '#dbeafe',
      stroke: '#1e40af',
      strokeWidth: 2,
      text: 'Database',
      fontSize: 14,
    }),
  },
  {
    id: 'cache',
    name: 'Cache',
    icon: '⚡',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'database',
      x,
      y,
      width: 120,
      height: 90,
      fill: '#fef3c7',
      stroke: '#f59e0b',
      strokeWidth: 2,
      text: 'Cache',
      fontSize: 14,
    }),
  },
  {
    id: 'api-gateway',
    name: 'API Gateway',
    icon: '🚪',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 140,
      height: 70,
      fill: '#d1fae5',
      stroke: '#059669',
      strokeWidth: 2,
      text: 'API Gateway',
      fontSize: 14,
    }),
  },
  {
    id: 'load-balancer',
    name: 'Load Balancer',
    icon: '⚖️',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 140,
      height: 70,
      fill: '#e0e7ff',
      stroke: '#4f46e5',
      strokeWidth: 2,
      text: 'Load Balancer',
      fontSize: 14,
    }),
  },
  {
    id: 'microservice',
    name: 'Microservice',
    icon: '📦',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'server-stack',
      x,
      y,
      width: 130,
      height: 90,
      fill: '#f3e8ff',
      stroke: '#7c3aed',
      strokeWidth: 2,
      text: 'Service',
      fontSize: 14,
    }),
  },
  {
    id: 'message-queue',
    name: 'Message Queue',
    icon: '📨',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#fce7f3',
      stroke: '#be185d',
      strokeWidth: 2,
      text: 'Queue',
      fontSize: 14,
    }),
  },
  {
    id: 'cdn',
    name: 'CDN',
    icon: '🌐',
    category: 'network',
    createComponent: (x, y) => ({
      type: 'cloud',
      x,
      y,
      width: 140,
      height: 80,
      fill: '#ccfbf1',
      stroke: '#0d9488',
      strokeWidth: 2,
      text: 'CDN',
      fontSize: 14,
    }),
  },
  {
    id: 'client',
    name: 'Client/UI',
    icon: '👤',
    category: 'client',
    createComponent: (x, y) => ({
      type: 'circle',
      x,
      y,
      radius: 45,
      fill: '#fef2f2',
      stroke: '#dc2626',
      strokeWidth: 2,
      text: 'Client',
      fontSize: 14,
    }),
  },
  {
    id: 'server',
    name: 'Server',
    icon: '🖥️',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'server-stack',
      x,
      y,
      width: 120,
      height: 90,
      fill: '#e5e7eb',
      stroke: '#374151',
      strokeWidth: 2,
      text: 'Server',
      fontSize: 14,
    }),
  },
  {
    id: 'storage',
    name: 'Object Storage',
    icon: '💾',
    category: 'storage',
    createComponent: (x, y) => ({
      type: 'cloud',
      x,
      y,
      width: 130,
      height: 70,
      fill: '#ddd6fe',
      stroke: '#6d28d9',
      strokeWidth: 2,
      text: 'Storage',
      fontSize: 14,
    }),
  },
  {
    id: 'auth-service',
    name: 'Auth Service',
    icon: '🔐',
    category: 'other',
    createComponent: (x, y) => ({
      type: 'rectangle',
      x,
      y,
      width: 120,
      height: 70,
      fill: '#fef3c7',
      stroke: '#d97706',
      strokeWidth: 2,
      text: 'Auth',
      fontSize: 14,
    }),
  },
  {
    id: 'worker',
    name: 'Worker/Background Job',
    icon: '⚙️',
    category: 'compute',
    createComponent: (x, y) => ({
      type: 'server-stack',
      x,
      y,
      width: 120,
      height: 90,
      fill: '#fed7aa',
      stroke: '#c2410c',
      strokeWidth: 2,
      text: 'Worker',
      fontSize: 14,
    }),
  },
];

export const getTemplatesByCategory = (category: ComponentTemplate['category']) => {
  return componentTemplates.filter(t => t.category === category);
};
